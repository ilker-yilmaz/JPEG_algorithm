{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-image-compress\";\nexport let ImageCompressComponent = /*#__PURE__*/(() => {\n  class ImageCompressComponent {\n    constructor(imageCompress) {\n      this.imageCompress = imageCompress;\n    }\n    selectFile(event) {\n      var fileName;\n      this.file = event.target.files[0];\n      fileName = this.file['name'];\n      if (event.target.files && event.target.files[0]) {\n        var reader = new FileReader();\n        reader.onload = event => {\n          this.localUrl = event.target.result;\n          this.compressFile(this.localUrl, fileName);\n        };\n        reader.readAsDataURL(event.target.files[0]);\n      }\n    }\n    compressFile(image, fileName) {\n      var orientation = -1;\n      this.sizeOfOriginalImage = this.imageCompress.byteCount(image) / (1024 * 1024);\n      console.warn('Size in bytes is now:', this.sizeOfOriginalImage);\n      this.imageCompress.compressFile(image, orientation, 50, 50).then(result => {\n        this.imgResultAfterCompress = result;\n        this.localCompressedURl = result;\n        this.sizeOFCompressedImage = this.imageCompress.byteCount(result) / (1024 * 1024);\n        console.warn('Size in bytes after compression:', this.sizeOFCompressedImage);\n        // create file from byte\n        const imageName = fileName;\n        // call method that creates a blob from dataUri\n        const imageBlob = this.dataURItoBlob(this.imgResultAfterCompress.split(',')[1]);\n        //imageFile created below is the new compressed file which can be send to API in form data\n        const imageFile = new File([result], imageName, {\n          type: 'image/jpeg'\n        });\n      });\n    }\n    dataURItoBlob(dataURI) {\n      const byteString = window.atob(dataURI);\n      const arrayBuffer = new ArrayBuffer(byteString.length);\n      const int8Array = new Uint8Array(arrayBuffer);\n      for (let i = 0; i < byteString.length; i++) {\n        int8Array[i] = byteString.charCodeAt(i);\n      }\n      const blob = new Blob([int8Array], {\n        type: 'image/jpeg'\n      });\n      return blob;\n    }\n    ngOnInit() {}\n  }\n  ImageCompressComponent.ɵfac = function ImageCompressComponent_Factory(t) {\n    return new (t || ImageCompressComponent)(i0.ɵɵdirectiveInject(i1.NgxImageCompressService));\n  };\n  ImageCompressComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ImageCompressComponent,\n    selectors: [[\"app-image-compress\"]],\n    decls: 0,\n    vars: 0,\n    template: function ImageCompressComponent_Template(rf, ctx) {}\n  });\n  return ImageCompressComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}