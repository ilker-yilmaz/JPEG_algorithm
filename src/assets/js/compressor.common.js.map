{"version":3,"file":"compressor.common.js","sources":["../node_modules/blueimp-canvas-to-blob/js/canvas-to-blob.js","../node_modules/is-blob/index.js","../src/defaults.js","../src/constants.js","../src/utilities.js","../src/index.js"],"sourcesContent":["/*\n * JavaScript Canvas to Blob\n * https://github.com/blueimp/JavaScript-Canvas-to-Blob\n *\n * Copyright 2012, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on stackoverflow user Stoive's code snippet:\n * http://stackoverflow.com/q/4998908\n */\n\n/* global define, Uint8Array, ArrayBuffer, module */\n\n;(function (window) {\n  'use strict'\n\n  var CanvasPrototype =\n    window.HTMLCanvasElement && window.HTMLCanvasElement.prototype\n  var hasBlobConstructor =\n    window.Blob &&\n    (function () {\n      try {\n        return Boolean(new Blob())\n      } catch (e) {\n        return false\n      }\n    })()\n  var hasArrayBufferViewSupport =\n    hasBlobConstructor &&\n    window.Uint8Array &&\n    (function () {\n      try {\n        return new Blob([new Uint8Array(100)]).size === 100\n      } catch (e) {\n        return false\n      }\n    })()\n  var BlobBuilder =\n    window.BlobBuilder ||\n    window.WebKitBlobBuilder ||\n    window.MozBlobBuilder ||\n    window.MSBlobBuilder\n  var dataURIPattern = /^data:((.*?)(;charset=.*?)?)(;base64)?,/\n  var dataURLtoBlob =\n    (hasBlobConstructor || BlobBuilder) &&\n    window.atob &&\n    window.ArrayBuffer &&\n    window.Uint8Array &&\n    function (dataURI) {\n      var matches,\n        mediaType,\n        isBase64,\n        dataString,\n        byteString,\n        arrayBuffer,\n        intArray,\n        i,\n        bb\n      // Parse the dataURI components as per RFC 2397\n      matches = dataURI.match(dataURIPattern)\n      if (!matches) {\n        throw new Error('invalid data URI')\n      }\n      // Default to text/plain;charset=US-ASCII\n      mediaType = matches[2]\n        ? matches[1]\n        : 'text/plain' + (matches[3] || ';charset=US-ASCII')\n      isBase64 = !!matches[4]\n      dataString = dataURI.slice(matches[0].length)\n      if (isBase64) {\n        // Convert base64 to raw binary data held in a string:\n        byteString = atob(dataString)\n      } else {\n        // Convert base64/URLEncoded data component to raw binary:\n        byteString = decodeURIComponent(dataString)\n      }\n      // Write the bytes of the string to an ArrayBuffer:\n      arrayBuffer = new ArrayBuffer(byteString.length)\n      intArray = new Uint8Array(arrayBuffer)\n      for (i = 0; i < byteString.length; i += 1) {\n        intArray[i] = byteString.charCodeAt(i)\n      }\n      // Write the ArrayBuffer (or ArrayBufferView) to a blob:\n      if (hasBlobConstructor) {\n        return new Blob([hasArrayBufferViewSupport ? intArray : arrayBuffer], {\n          type: mediaType\n        })\n      }\n      bb = new BlobBuilder()\n      bb.append(arrayBuffer)\n      return bb.getBlob(mediaType)\n    }\n  if (window.HTMLCanvasElement && !CanvasPrototype.toBlob) {\n    if (CanvasPrototype.mozGetAsFile) {\n      CanvasPrototype.toBlob = function (callback, type, quality) {\n        var self = this\n        setTimeout(function () {\n          if (quality && CanvasPrototype.toDataURL && dataURLtoBlob) {\n            callback(dataURLtoBlob(self.toDataURL(type, quality)))\n          } else {\n            callback(self.mozGetAsFile('blob', type))\n          }\n        })\n      }\n    } else if (CanvasPrototype.toDataURL && dataURLtoBlob) {\n      if (CanvasPrototype.msToBlob) {\n        CanvasPrototype.toBlob = function (callback, type, quality) {\n          var self = this\n          setTimeout(function () {\n            if (\n              ((type && type !== 'image/png') || quality) &&\n              CanvasPrototype.toDataURL &&\n              dataURLtoBlob\n            ) {\n              callback(dataURLtoBlob(self.toDataURL(type, quality)))\n            } else {\n              callback(self.msToBlob(type))\n            }\n          })\n        }\n      } else {\n        CanvasPrototype.toBlob = function (callback, type, quality) {\n          var self = this\n          setTimeout(function () {\n            callback(dataURLtoBlob(self.toDataURL(type, quality)))\n          })\n        }\n      }\n    }\n  }\n  if (typeof define === 'function' && define.amd) {\n    define(function () {\n      return dataURLtoBlob\n    })\n  } else if (typeof module === 'object' && module.exports) {\n    module.exports = dataURLtoBlob\n  } else {\n    window.dataURLtoBlob = dataURLtoBlob\n  }\n})(window)\n","'use strict';\n\nmodule.exports = value => {\n\tif (typeof Blob === 'undefined') {\n\t\treturn false;\n\t}\n\n\treturn value instanceof Blob || Object.prototype.toString.call(value) === '[object Blob]';\n};\n","export default {\n  /**\n   * Indicates if output the original image instead of the compressed one\n   * when the size of the compressed image is greater than the original one's\n   * @type {boolean}\n   */\n  strict: true,\n\n  /**\n   * Indicates if read the image's Exif Orientation information,\n   * and then rotate or flip the image automatically.\n   * @type {boolean}\n   */\n  checkOrientation: true,\n\n  /**\n   * The max width of the output image.\n   * @type {number}\n   */\n  maxWidth: Infinity,\n\n  /**\n   * The max height of the output image.\n   * @type {number}\n   */\n  maxHeight: Infinity,\n\n  /**\n   * The min width of the output image.\n   * @type {number}\n   */\n  minWidth: 0,\n\n  /**\n   * The min height of the output image.\n   * @type {number}\n   */\n  minHeight: 0,\n\n  /**\n   * The width of the output image.\n   * If not specified, the natural width of the source image will be used.\n   * @type {number}\n   */\n  width: undefined,\n\n  /**\n   * The height of the output image.\n   * If not specified, the natural height of the source image will be used.\n   * @type {number}\n   */\n  height: undefined,\n\n  /**\n   * The quality of the output image.\n   * It must be a number between `0` and `1`,\n   * and only available for `image/jpeg` and `image/webp` images.\n   * Check out {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/toBlob canvas.toBlob}.\n   * @type {number}\n   */\n  quality: 0.8,\n\n  /**\n   * The mime type of the output image.\n   * By default, the original mime type of the source image file will be used.\n   * @type {string}\n   */\n  mimeType: 'auto',\n\n  /**\n   * PNG files over this value (5 MB by default) will be converted to JPEGs.\n   * To disable this, just set the value to `Infinity`.\n   * @type {number}\n   */\n  convertSize: 5000000,\n\n  /**\n   * The hook function to execute before draw the image into the canvas for compression.\n   * @type {Function}\n   * @param {CanvasRenderingContext2D} context - The 2d rendering context of the canvas.\n   * @param {HTMLCanvasElement} canvas - The canvas for compression.\n   * @example\n   * function (context, canvas) {\n   *   context.fillStyle = '#fff';\n   * }\n   */\n  beforeDraw: null,\n\n  /**\n   * The hook function to execute after drew the image into the canvas for compression.\n   * @type {Function}\n   * @param {CanvasRenderingContext2D} context - The 2d rendering context of the canvas.\n   * @param {HTMLCanvasElement} canvas - The canvas for compression.\n   * @example\n   * function (context, canvas) {\n   *   context.filter = 'grayscale(100%)';\n   * }\n   */\n  drew: null,\n\n  /**\n   * The hook function to execute when success to compress the image.\n   * @type {Function}\n   * @param {File} file - The compressed image File object.\n   * @example\n   * function (file) {\n   *   console.log(file);\n   * }\n   */\n  success: null,\n\n  /**\n   * The hook function to execute when fail to compress the image.\n   * @type {Function}\n   * @param {Error} err - An Error object.\n   * @example\n   * function (err) {\n   *   console.log(err.message);\n   * }\n   */\n  error: null,\n};\n","export const IS_BROWSER = typeof window !== 'undefined' && typeof window.document !== 'undefined';\nexport const WINDOW = IS_BROWSER ? window : {};\n","import {\n  WINDOW,\n} from './constants';\n\nconst { slice } = Array.prototype;\n\n/**\n * Convert array-like or iterable object to an array.\n * @param {*} value - The value to convert.\n * @returns {Array} Returns a new array.\n */\nexport function toArray(value) {\n  return Array.from ? Array.from(value) : slice.call(value);\n}\n\nconst REGEXP_IMAGE_TYPE = /^image\\/.+$/;\n\n/**\n * Check if the given value is a mime type of image.\n * @param {*} value - The value to check.\n * @returns {boolean} Returns `true` if the given is a mime type of image, else `false`.\n */\nexport function isImageType(value) {\n  return REGEXP_IMAGE_TYPE.test(value);\n}\n\n/**\n * Convert image type to extension.\n * @param {string} value - The image type to convert.\n * @returns {boolean} Returns the image extension.\n */\nexport function imageTypeToExtension(value) {\n  let extension = isImageType(value) ? value.substr(6) : '';\n\n  if (extension === 'jpeg') {\n    extension = 'jpg';\n  }\n\n  return `.${extension}`;\n}\n\nconst { fromCharCode } = String;\n\n/**\n * Get string from char code in data view.\n * @param {DataView} dataView - The data view for read.\n * @param {number} start - The start index.\n * @param {number} length - The read length.\n * @returns {string} The read result.\n */\nexport function getStringFromCharCode(dataView, start, length) {\n  let str = '';\n  let i;\n\n  length += start;\n\n  for (i = start; i < length; i += 1) {\n    str += fromCharCode(dataView.getUint8(i));\n  }\n\n  return str;\n}\n\nconst { btoa } = WINDOW;\n\n/**\n * Transform array buffer to Data URL.\n * @param {ArrayBuffer} arrayBuffer - The array buffer to transform.\n * @param {string} mimeType - The mime type of the Data URL.\n * @returns {string} The result Data URL.\n */\nexport function arrayBufferToDataURL(arrayBuffer, mimeType) {\n  const chunks = [];\n  const chunkSize = 8192;\n  let uint8 = new Uint8Array(arrayBuffer);\n\n  while (uint8.length > 0) {\n    // XXX: Babel's `toConsumableArray` helper will throw error in IE or Safari 9\n    // eslint-disable-next-line prefer-spread\n    chunks.push(fromCharCode.apply(null, toArray(uint8.subarray(0, chunkSize))));\n    uint8 = uint8.subarray(chunkSize);\n  }\n\n  return `data:${mimeType};base64,${btoa(chunks.join(''))}`;\n}\n\n/**\n * Get orientation value from given array buffer.\n * @param {ArrayBuffer} arrayBuffer - The array buffer to read.\n * @returns {number} The read orientation value.\n */\nexport function resetAndGetOrientation(arrayBuffer) {\n  const dataView = new DataView(arrayBuffer);\n  let orientation;\n\n  // Ignores range error when the image does not have correct Exif information\n  try {\n    let littleEndian;\n    let app1Start;\n    let ifdStart;\n\n    // Only handle JPEG image (start by 0xFFD8)\n    if (dataView.getUint8(0) === 0xFF && dataView.getUint8(1) === 0xD8) {\n      const length = dataView.byteLength;\n      let offset = 2;\n\n      while (offset + 1 < length) {\n        if (dataView.getUint8(offset) === 0xFF && dataView.getUint8(offset + 1) === 0xE1) {\n          app1Start = offset;\n          break;\n        }\n\n        offset += 1;\n      }\n    }\n\n    if (app1Start) {\n      const exifIDCode = app1Start + 4;\n      const tiffOffset = app1Start + 10;\n\n      if (getStringFromCharCode(dataView, exifIDCode, 4) === 'Exif') {\n        const endianness = dataView.getUint16(tiffOffset);\n\n        littleEndian = endianness === 0x4949;\n\n        if (littleEndian || endianness === 0x4D4D /* bigEndian */) {\n          if (dataView.getUint16(tiffOffset + 2, littleEndian) === 0x002A) {\n            const firstIFDOffset = dataView.getUint32(tiffOffset + 4, littleEndian);\n\n            if (firstIFDOffset >= 0x00000008) {\n              ifdStart = tiffOffset + firstIFDOffset;\n            }\n          }\n        }\n      }\n    }\n\n    if (ifdStart) {\n      const length = dataView.getUint16(ifdStart, littleEndian);\n      let offset;\n      let i;\n\n      for (i = 0; i < length; i += 1) {\n        offset = ifdStart + (i * 12) + 2;\n\n        if (dataView.getUint16(offset, littleEndian) === 0x0112 /* Orientation */) {\n          // 8 is the offset of the current tag's value\n          offset += 8;\n\n          // Get the original orientation value\n          orientation = dataView.getUint16(offset, littleEndian);\n\n          // Override the orientation with its default value\n          dataView.setUint16(offset, 1, littleEndian);\n          break;\n        }\n      }\n    }\n  } catch (e) {\n    orientation = 1;\n  }\n\n  return orientation;\n}\n\n/**\n * Parse Exif Orientation value.\n * @param {number} orientation - The orientation to parse.\n * @returns {Object} The parsed result.\n */\nexport function parseOrientation(orientation) {\n  let rotate = 0;\n  let scaleX = 1;\n  let scaleY = 1;\n\n  switch (orientation) {\n    // Flip horizontal\n    case 2:\n      scaleX = -1;\n      break;\n\n    // Rotate left 180°\n    case 3:\n      rotate = -180;\n      break;\n\n    // Flip vertical\n    case 4:\n      scaleY = -1;\n      break;\n\n    // Flip vertical and rotate right 90°\n    case 5:\n      rotate = 90;\n      scaleY = -1;\n      break;\n\n    // Rotate right 90°\n    case 6:\n      rotate = 90;\n      break;\n\n    // Flip horizontal and rotate right 90°\n    case 7:\n      rotate = 90;\n      scaleX = -1;\n      break;\n\n    // Rotate left 90°\n    case 8:\n      rotate = -90;\n      break;\n\n    default:\n  }\n\n  return {\n    rotate,\n    scaleX,\n    scaleY,\n  };\n}\n\nconst REGEXP_DECIMALS = /\\.\\d*(?:0|9){12}\\d*$/;\n\n/**\n * Normalize decimal number.\n * Check out {@link https://0.30000000000000004.com/}\n * @param {number} value - The value to normalize.\n * @param {number} [times=100000000000] - The times for normalizing.\n * @returns {number} Returns the normalized number.\n */\nexport function normalizeDecimalNumber(value, times = 100000000000) {\n  return REGEXP_DECIMALS.test(value) ? (Math.round(value * times) / times) : value;\n}\n","import toBlob from 'blueimp-canvas-to-blob';\nimport isBlob from 'is-blob';\nimport DEFAULTS from './defaults';\nimport {\n  WINDOW,\n} from './constants';\nimport {\n  arrayBufferToDataURL,\n  imageTypeToExtension,\n  isImageType,\n  normalizeDecimalNumber,\n  parseOrientation,\n  resetAndGetOrientation,\n} from './utilities';\n\nconst { ArrayBuffer, FileReader } = WINDOW;\nconst URL = WINDOW.URL || WINDOW.webkitURL;\nconst REGEXP_EXTENSION = /\\.\\w+$/;\nconst AnotherCompressor = WINDOW.Compressor;\n\n/**\n * Creates a new image compressor.\n * @class\n */\nexport default class Compressor {\n  /**\n   * The constructor of Compressor.\n   * @param {File|Blob} file - The target image file for compressing.\n   * @param {Object} [options] - The options for compressing.\n   */\n  constructor(file, options) {\n    this.file = file;\n    this.image = new Image();\n    this.options = {\n      ...DEFAULTS,\n      ...options,\n    };\n    this.aborted = false;\n    this.result = null;\n    this.init();\n  }\n\n  init() {\n    const { file, options } = this;\n\n    if (!isBlob(file)) {\n      this.fail(new Error('The first argument must be a File or Blob object.'));\n      return;\n    }\n\n    const mimeType = file.type;\n\n    if (!isImageType(mimeType)) {\n      this.fail(new Error('The first argument must be an image File or Blob object.'));\n      return;\n    }\n\n    if (!URL || !FileReader) {\n      this.fail(new Error('The current browser does not support image compression.'));\n      return;\n    }\n\n    if (!ArrayBuffer) {\n      options.checkOrientation = false;\n    }\n\n    if (URL && !options.checkOrientation) {\n      this.load({\n        url: URL.createObjectURL(file),\n      });\n    } else {\n      const reader = new FileReader();\n      const checkOrientation = options.checkOrientation && mimeType === 'image/jpeg';\n\n      this.reader = reader;\n      reader.onload = ({ target }) => {\n        const { result } = target;\n        const data = {};\n\n        if (checkOrientation) {\n          // Reset the orientation value to its default value 1\n          // as some iOS browsers will render image with its orientation\n          const orientation = resetAndGetOrientation(result);\n\n          if (orientation > 1 || !URL) {\n            // Generate a new URL which has the default orientation value\n            data.url = arrayBufferToDataURL(result, mimeType);\n\n            if (orientation > 1) {\n              Object.assign(data, parseOrientation(orientation));\n            }\n          } else {\n            data.url = URL.createObjectURL(file);\n          }\n        } else {\n          data.url = result;\n        }\n\n        this.load(data);\n      };\n      reader.onabort = () => {\n        this.fail(new Error('Aborted to read the image with FileReader.'));\n      };\n      reader.onerror = () => {\n        this.fail(new Error('Failed to read the image with FileReader.'));\n      };\n      reader.onloadend = () => {\n        this.reader = null;\n      };\n\n      if (checkOrientation) {\n        reader.readAsArrayBuffer(file);\n      } else {\n        reader.readAsDataURL(file);\n      }\n    }\n  }\n\n  load(data) {\n    const { file, image } = this;\n\n    image.onload = () => {\n      this.draw({\n        ...data,\n        naturalWidth: image.naturalWidth,\n        naturalHeight: image.naturalHeight,\n      });\n    };\n    image.onabort = () => {\n      this.fail(new Error('Aborted to load the image.'));\n    };\n    image.onerror = () => {\n      this.fail(new Error('Failed to load the image.'));\n    };\n\n    // Match all browsers that use WebKit as the layout engine in iOS devices,\n    // such as Safari for iOS, Chrome for iOS, and in-app browsers.\n    if (WINDOW.navigator && /(?:iPad|iPhone|iPod).*?AppleWebKit/i.test(WINDOW.navigator.userAgent)) {\n      // Fix the `The operation is insecure` error (#57)\n      image.crossOrigin = 'anonymous';\n    }\n\n    image.alt = file.name;\n    image.src = data.url;\n  }\n\n  draw({\n    naturalWidth,\n    naturalHeight,\n    rotate = 0,\n    scaleX = 1,\n    scaleY = 1,\n  }) {\n    const { file, image, options } = this;\n    const canvas = document.createElement('canvas');\n    const context = canvas.getContext('2d');\n    const aspectRatio = naturalWidth / naturalHeight;\n    const is90DegreesRotated = Math.abs(rotate) % 180 === 90;\n    let maxWidth = Math.max(options.maxWidth, 0) || Infinity;\n    let maxHeight = Math.max(options.maxHeight, 0) || Infinity;\n    let minWidth = Math.max(options.minWidth, 0) || 0;\n    let minHeight = Math.max(options.minHeight, 0) || 0;\n    let width = Math.max(options.width, 0) || naturalWidth;\n    let height = Math.max(options.height, 0) || naturalHeight;\n\n    if (is90DegreesRotated) {\n      [maxWidth, maxHeight] = [maxHeight, maxWidth];\n      [minWidth, minHeight] = [minHeight, minWidth];\n      [width, height] = [height, width];\n    }\n\n    if (maxWidth < Infinity && maxHeight < Infinity) {\n      if (maxHeight * aspectRatio > maxWidth) {\n        maxHeight = maxWidth / aspectRatio;\n      } else {\n        maxWidth = maxHeight * aspectRatio;\n      }\n    } else if (maxWidth < Infinity) {\n      maxHeight = maxWidth / aspectRatio;\n    } else if (maxHeight < Infinity) {\n      maxWidth = maxHeight * aspectRatio;\n    }\n\n    if (minWidth > 0 && minHeight > 0) {\n      if (minHeight * aspectRatio > minWidth) {\n        minHeight = minWidth / aspectRatio;\n      } else {\n        minWidth = minHeight * aspectRatio;\n      }\n    } else if (minWidth > 0) {\n      minHeight = minWidth / aspectRatio;\n    } else if (minHeight > 0) {\n      minWidth = minHeight * aspectRatio;\n    }\n\n    if (height * aspectRatio > width) {\n      height = width / aspectRatio;\n    } else {\n      width = height * aspectRatio;\n    }\n\n    width = Math.floor(normalizeDecimalNumber(Math.min(Math.max(width, minWidth), maxWidth)));\n    height = Math.floor(normalizeDecimalNumber(Math.min(Math.max(height, minHeight), maxHeight)));\n\n    const destX = -width / 2;\n    const destY = -height / 2;\n    const destWidth = width;\n    const destHeight = height;\n\n    if (is90DegreesRotated) {\n      [width, height] = [height, width];\n    }\n\n    canvas.width = width;\n    canvas.height = height;\n\n    if (!isImageType(options.mimeType)) {\n      options.mimeType = file.type;\n    }\n\n    let fillStyle = 'transparent';\n\n    // Converts PNG files over the `convertSize` to JPEGs.\n    if (file.size > options.convertSize && options.mimeType === 'image/png') {\n      fillStyle = '#fff';\n      options.mimeType = 'image/jpeg';\n    }\n\n    // Override the default fill color (#000, black)\n    context.fillStyle = fillStyle;\n    context.fillRect(0, 0, width, height);\n\n    if (options.beforeDraw) {\n      options.beforeDraw.call(this, context, canvas);\n    }\n\n    if (this.aborted) {\n      return;\n    }\n\n    context.save();\n    context.translate(width / 2, height / 2);\n    context.rotate((rotate * Math.PI) / 180);\n    context.scale(scaleX, scaleY);\n    context.drawImage(image, destX, destY, destWidth, destHeight);\n    context.restore();\n\n    if (options.drew) {\n      options.drew.call(this, context, canvas);\n    }\n\n    if (this.aborted) {\n      return;\n    }\n\n    const done = (result) => {\n      if (!this.aborted) {\n        this.done({\n          naturalWidth,\n          naturalHeight,\n          result,\n        });\n      }\n    };\n\n    if (canvas.toBlob) {\n      canvas.toBlob(done, options.mimeType, options.quality);\n    } else {\n      done(toBlob(canvas.toDataURL(options.mimeType, options.quality)));\n    }\n  }\n\n  done({\n    naturalWidth,\n    naturalHeight,\n    result,\n  }) {\n    const { file, image, options } = this;\n\n    if (URL && !options.checkOrientation) {\n      URL.revokeObjectURL(image.src);\n    }\n\n    if (result) {\n      // Returns original file if the result is greater than it and without size related options\n      if (options.strict && result.size > file.size && options.mimeType === file.type && !(\n        options.width > naturalWidth\n        || options.height > naturalHeight\n        || options.minWidth > naturalWidth\n        || options.minHeight > naturalHeight\n      )) {\n        result = file;\n      } else {\n        const date = new Date();\n\n        result.lastModified = date.getTime();\n        result.lastModifiedDate = date;\n        result.name = file.name;\n\n        // Convert the extension to match its type\n        if (result.name && result.type !== file.type) {\n          result.name = result.name.replace(\n            REGEXP_EXTENSION,\n            imageTypeToExtension(result.type),\n          );\n        }\n      }\n    } else {\n      // Returns original file if the result is null in some cases.\n      result = file;\n    }\n\n    this.result = result;\n\n    if (options.success) {\n      options.success.call(this, result);\n    }\n  }\n\n  fail(err) {\n    const { options } = this;\n\n    if (options.error) {\n      options.error.call(this, err);\n    } else {\n      throw err;\n    }\n  }\n\n  abort() {\n    if (!this.aborted) {\n      this.aborted = true;\n\n      if (this.reader) {\n        this.reader.abort();\n      } else if (!this.image.complete) {\n        this.image.onload = null;\n        this.image.onabort();\n      } else {\n        this.fail(new Error('The compression process has been aborted.'));\n      }\n    }\n  }\n\n  /**\n   * Get the no conflict compressor class.\n   * @returns {Compressor} The compressor class.\n   */\n  static noConflict() {\n    window.Compressor = AnotherCompressor;\n    return Compressor;\n  }\n\n  /**\n   * Change the default options.\n   * @param {Object} options - The new default options.\n   */\n  static setDefaults(options) {\n    Object.assign(DEFAULTS, options);\n  }\n}\n"],"names":["window","CanvasPrototype","HTMLCanvasElement","prototype","hasBlobConstructor","Blob","Boolean","e","hasArrayBufferViewSupport","Uint8Array","size","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","dataURIPattern","dataURLtoBlob","atob","ArrayBuffer","dataURI","matches","mediaType","isBase64","dataString","byteString","arrayBuffer","intArray","i","bb","match","Error","slice","length","decodeURIComponent","charCodeAt","type","append","getBlob","toBlob","mozGetAsFile","callback","quality","self","setTimeout","toDataURL","msToBlob","module","exports","value","Object","toString","call","strict","checkOrientation","maxWidth","Infinity","maxHeight","minWidth","minHeight","width","undefined","height","mimeType","convertSize","beforeDraw","drew","success","error","IS_BROWSER","document","WINDOW","Array","toArray","from","REGEXP_IMAGE_TYPE","isImageType","test","imageTypeToExtension","extension","substr","fromCharCode","String","getStringFromCharCode","dataView","start","str","getUint8","btoa","arrayBufferToDataURL","chunks","chunkSize","uint8","push","apply","subarray","join","resetAndGetOrientation","DataView","orientation","littleEndian","app1Start","ifdStart","byteLength","offset","exifIDCode","tiffOffset","endianness","getUint16","firstIFDOffset","getUint32","setUint16","parseOrientation","rotate","scaleX","scaleY","REGEXP_DECIMALS","normalizeDecimalNumber","times","Math","round","FileReader","URL","webkitURL","REGEXP_EXTENSION","AnotherCompressor","Compressor","file","options","image","Image","DEFAULTS","aborted","result","init","isBlob","fail","load","url","createObjectURL","reader","onload","target","data","onabort","onerror","onloadend","readAsArrayBuffer","readAsDataURL","draw","naturalWidth","naturalHeight","navigator","userAgent","crossOrigin","alt","name","src","canvas","createElement","context","getContext","aspectRatio","is90DegreesRotated","abs","max","floor","min","destX","destY","destWidth","destHeight","fillStyle","fillRect","save","translate","PI","scale","drawImage","restore","done","revokeObjectURL","date","Date","lastModified","getTime","lastModifiedDate","replace","err","abort","complete"],"mappings":"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"}